# 入力は以下のフォーマットで与えられます。

# N
# f_1 s_1
# f_2 s_2
# ...
# f_M s_M  
# ・1 行目には大会の参加者の総数を表す整数 N が与えられます。
# ・続く M 行 (M = N × (N-1) / 2) のうち i 行目 (1 ≦ i ≦ M) には i 番目の試合結果の勝者の番号を表す整数 f_i、敗者の番号を表す整数 s_i がこの順に半角スペース区切りで与えられます。
# ・入力は合計で M + 1 行となり、入力最値終行の末尾に改行が 1 つ入ります。

# 大会の勝敗結果の表を以下の形式で出力してください。

# r_{1,1} r_{1,2} ... r_{1,N}
# r_{2,1} r_{2,2} ... r_{2,N}
# ...
# r_{N,1} r_{N,2} ... r_{N,N}
# ・期待する出力は N 行からなります。
# ・出力の i 行目 (1 ≦ i ≦ N) に N 個の文字を半角スペース区切りで出力してください。この j 番目 (1 ≦ j ≦ N) の文字 r_{i, j} は参加者 i から見た参加者 j との試合の結果を表します。
# 　・i ≠ j のとき、r_{i, j} は試合結果が勝利である場合 "W" 、敗北である場合は "L" となります。
# 　・i = j のとき、r_{i, j} は存在しない試合に対応するので "-" となります。
# ・出力の N 行目の最後に改行を 1 つ入れ、余計な文字、空行を含んではいけません。

N = gets.to_i
league = Array.new(N).map{Array.new(N,'-')}
count = (N**2 - N) / 2

count.times do
  w,l = gets.split(' ').map(&:to_i)
  league[w-1][l-1] = 'W'
  league[l-1][w-1] = 'L'
end

league.each do |l|
  puts l.join(' ')
end

# 多次元配列の作成と、多次元配列内の置き換え