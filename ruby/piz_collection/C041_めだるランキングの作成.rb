# 入力は以下のフォーマットで与えられます。

```
# N
# g_1 s_1 b_1
# g_2 s_2 b_2
# ...
# g_N s_N b_N
```
# ・1 行目にはランキング対象となる国の総数を表す整数 N が与えられます。
# ・続く N 行のうち i 行目 (1 ≦ i ≦ N) には i 番目の国の金メダル、銀メダル、銅メダルの獲得数をそれぞれ表す整数 g_i, s_i, b_i がこの順に半角スペース区切りで与えられます。
# ・入力は合計で N + 1 行であり、入力最終行の末尾に改行が１つ入ります。

# メダル獲得数のランキングを以下の形式で出力してください。
```
# rg_1 rs_1 rb_1
# rg_2 rs_2 rb_2
# ...
# rg_N rs_N rb_N
```
# ・期待する出力は N 行からなります。
# ・出力の i 行目 (1 ≦ i ≦ N) にランキング第 i 位の国の金メダル、銀メダル、銅メダルの獲得数をそれぞれ表す rg_i, rs_i, rb_i をそれぞれ出力してください。
# 　　・第 j 位 (1 ≦ j ≦ N - 1) において 2 カ国が同着であった場合、便宜的に一方の国を第 j 位、もう一方の国を第 j + 1 位と考えます (メダルの獲得数を出力するので区別の必要はありません)。
# ・出力の N 行目の最後に改行を 1 つ入れ、余計な文字、空行を含んではいけません。

def medal_rank(medals)
  rank = medals.sort{ |a, b| b <=> a }
  rank.each do |rank|
    puts rank.join(' ')
  end
end

medals = []
N = gets.to_i
N.times do
  count = gets.split(' ').map(&:to_i)
  medals << count
end

medal_rank(medals)

# 多次元配列のソート、繰り返し分での出力